<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="book">
    <resultMap id="bookDTO" type="test.jdbc.bean.BookDTO">
        <result column="num" property="num"/>
        <result column="writer" property="title"/>
        <result column="title" property="content"/>
        <result column="content" property="writer"/>
        <result column="reg" property="reg"/>
    </resultMap>

    <select id="bookSelect" resultMap="bookDTO">
        select * from book
    </select>

    <!--include를 통해 다른 쿼리에 받아서 사용할 수 있다.-->
    <sql id="whereNum">
       where num = #{num}
    </sql>


<!--resultType: 결과에 대한 타입 -->
<!-- DTO이름을 집어넣으면 해당 변수에 맞게 맵퍼가 변경해준다.-->
  <select id="bookCount" resultType ="int">
      select COUNT(*) from book
  </select>

<!--    resultType이 여러 개일 경우 DTO 타입으로 한다.-->
    <select id="bookAll" resultType="test.jdbc.bean.BookDTO">
        select * from book
    </select>

    <!-- prameter type: 채워 넣을 타입 -->
    <select id="bookNum" resultType="test.jdbc.bean.BookDTO" parameterType="int">
        select * from book where num = #{num}
    </select>

    <insert id="bookInsert" parameterType="test.jdbc.bean.BookDTO">
        insert into book values(book_seq.nextval, #{writer}, #{title}, #{content} , sysdate)
    </insert>

    <update id="bookUpdate" parameterType="test.jdbc.bean.BookDTO">
        update book set title = #{title}, content = #{content} where num = #{num}
    </update>

    <delete id="bookDelete" parameterType="int">
        delete from book where num = #{num}
    </delete>
</mapper>